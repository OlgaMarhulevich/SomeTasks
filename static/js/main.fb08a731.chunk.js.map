{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Error404","Message","props","className","s","messageComponent","img","src","avatar","alt","mesAll","tail","messageBox","name","message","time","messageData","HW1","Affair","affair","priority","red","yellow","green","classPriority","btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","event","currentTarget","value","setClasses","filter","activeBtn","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","hw2","af","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","greeting","onChange","onKeyPress","key","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","length","newName","Number","trim","addedName","split","el","toUpperCase","substring","join","changeName","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","divInput","e","SuperButton","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","text","setText","showAlert","setChecked","column","disabled","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","navbar","navlink","activeClassName","active","arrow","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,MAAQ,8BAA8B,SAAW,iCAAiC,WAAa,mCAAmC,MAAQ,gC,mBCA5MD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,aAAe,+BAA+B,MAAQ,wBAAwB,IAAM,wB,mBCA5ID,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,qCAAqC,MAAQ,+B,mBCA1HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,wICWzEC,MAVf,WACI,OACI,gCACI,sCACA,kDACA,uF,uBCoBGC,MAhBf,SAAiBC,GACb,OACI,sBAAKC,UAAWC,IAAEC,iBAAlB,UACI,qBAAKF,UAAWC,IAAEE,IAAKC,IAAKL,EAAMM,OAAQC,IAAI,WAC9C,sBAAKN,UAAWC,IAAEM,OAAlB,UACI,qBAAKP,UAAWC,IAAEO,OAClB,sBAAKR,UAAWC,IAAEQ,WAAlB,UACI,mBAAGT,UAAWC,IAAES,KAAhB,SAAuBX,EAAMW,OAC7B,mBAAGV,UAAWC,IAAEU,QAAhB,SAA0BZ,EAAMY,UAChC,mBAAGX,UAAWC,IAAEW,KAAhB,SAAuBb,EAAMa,iBCjB3CC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QA0BKC,MAvBf,WACI,OACI,gCACI,uBADJ,cAMI,cAAC,EAAD,CACIT,OAAQQ,EACRH,KAAMG,EACNF,QAASE,EACTD,KAAMC,IAGV,uBAGA,2B,uBCUGE,MA5Bf,SAAgBhB,GAeZ,OACI,sBAAKC,UAAWC,IAAEe,OAAlB,UACI,8BACKjB,EAAMiB,OAAON,OAElB,sBAAKV,UAhBS,WAClB,OAAQD,EAAMiB,OAAOC,UACjB,IAAK,OACD,OAAOhB,IAAEiB,IACb,IAAK,SACD,OAAOjB,IAAEkB,OACb,IAAK,MACD,OAAOlB,IAAEmB,OASGC,GAAhB,cACMtB,EAAMiB,OAAOC,SADnB,OAGA,wBAAQjB,UAAWC,IAAEqB,IAAKC,QArBX,WAAOxB,EAAMyB,qBAAqBzB,EAAMiB,OAAOS,MAqB9D,mBCQGC,MA7Bf,SAAiB3B,GACb,IAAM4B,EAAgB5B,EAAM6B,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEId,OAAQc,EACRN,qBAAsBzB,EAAMyB,sBAFvBM,EAAEL,QAMTM,EAAY,SAACC,GACfjC,EAAMgC,UAAUC,EAAMC,cAAcC,QAGlCC,EAAa,SAACC,GAChB,OAAOnC,IAAEqB,KAAQvB,EAAMqC,SAAWA,EAAjB,WAA8BnC,IAAEoC,WAAc,KAGnE,OACI,gCACKV,EAED,wBAAQ3B,UAAWmC,EAAW,OAAQZ,QAASQ,EAAWG,MAAO,MAAjE,iBACA,wBAAQlC,UAAWmC,EAAW,QAASZ,QAASQ,EAAWG,MAAO,OAAlE,kBACA,wBAAQlC,UAAWmC,EAAW,UAAWZ,QAASQ,EAAWG,MAAO,SAApE,oBACA,wBAAQlC,UAAWmC,EAAW,OAAQZ,QAASQ,EAAWG,MAAO,MAAjE,qBCtBNI,EAAoC,CACtC,CAACb,IAAK,EAAGf,KAAM,QAASO,SAAU,QAClC,CAACQ,IAAK,EAAGf,KAAM,QAASO,SAAU,OAClC,CAACQ,IAAK,EAAGf,KAAM,QAASO,SAAU,OAClC,CAACQ,IAAK,EAAGf,KAAM,OAAQO,SAAU,QACjC,CAACQ,IAAK,EAAGf,KAAM,aAAcO,SAAU,WAwC5BsB,MA5Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJJ,EAFI,KAEIL,EAFJ,KAILY,EAZmB,SAACF,EAA4BL,GACtD,MAAe,QAAXA,EAAyBK,EACjBA,EAAQL,QAAO,SAAApB,GAAM,OAAIA,EAAOC,WAAamB,KAUjCQ,CAAcH,EAASL,GAG/C,OACI,sBAAKpC,UAAWC,IAAE4C,IAAlB,UACI,uBADJ,cAKI,cAAC,EAAD,CACIjB,KAAMe,EACNZ,UAAWA,EACXK,OAAQA,EACRZ,qBAZiB,SAACC,GAAD,OAAiBiB,EATtB,SAACD,EAA4BhB,GACrD,OAAOgB,EAAQL,QAAO,SAAAU,GAAE,OAAIA,EAAGrB,MAAQA,KAQkBsB,CAAaN,EAAShB,OAevE,uBAGA,2B,yBClBGuB,EAxB+B,SAAC,GAAuF,IAAtFtC,EAAqF,EAArFA,KAAMuC,EAA+E,EAA/EA,gBAAiBC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,WAE7EC,EAAaF,EAAQlD,IAAEkD,MAAQ,GAYrC,OACI,sBAAKnD,UAAWC,IAAEqD,SAAlB,UACI,uBAAOpB,MAAOxB,EAAM6C,SAAUN,EAAiBjD,UAAWqD,EAAYG,WAZzD,SAACxB,GACA,UAAdA,EAAMyB,KAAiBP,OAYvB,wBAAQlD,UAAWC,IAAEqB,IAAKC,QAAS2B,EAAnC,iBACA,+BATe,IAAfE,EAAyB,eACI,GAAN,OAAUA,EAAb,IAAfA,EAAkB,cACtB,kBAQD,sBAAMpD,UAAWC,IAAEyD,aAAnB,SAAkCP,QC2B/BQ,EA5CiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClErB,mBAAiB,IADiD,mBACnF9B,EADmF,KAC7EoD,EAD6E,OAEhEtB,mBAAiB,IAF+C,mBAEnFW,EAFmF,KAE5EY,EAF4E,KA+BpFX,EAAaQ,EAAMI,OAEzB,OACI,cAAC,EAAD,CACItD,KAAMA,EACNuC,gBAhCgB,SAACjB,GACrB,IAAMiC,EAAUjC,EAAMC,cAAcC,MAC9BgC,OAAOD,KAAaA,EAAQE,QAC9BJ,EAAS,mBACTD,EAAQG,KAERH,EAAQG,GACRF,EAAS,MA0BTb,QAlBQ,WACZ,GAAIC,GAAkB,KAATzC,EACTqD,EAAS,mBACTD,EAAQ,QACL,CACH,IAAMM,EATK,SAAC1D,GAChB,OAAOA,EAAK2D,MAAM,KAAKjC,QAAO,SAAAkC,GAAE,OAAIA,EAAGH,UAAQtC,KAAI,SAAAyC,GAAE,OAAIA,EAAG,GAAGC,cAAgBD,EAAGE,UAAU,MAAIC,KAAK,KAQ/EC,CAAWhE,GAC7BmD,EAAgBO,GAChBN,EAAQ,IACRa,MAAM,UAAD,OAAWP,EAAX,QAWLjB,MAAOA,EACPC,WAAYA,K,QClBTwB,MAxBf,WAAgB,IAAD,EACepC,mBAAqB,IADpC,mBACJoB,EADI,KACGiB,EADH,KAQX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBjB,MAAOA,EAAOC,gBAXjB,SAACnD,GACrB,IAAMoE,EAAU,CAAErD,IAAKsD,cAAMrE,KAAMA,GACnCmE,EAAS,CAACC,GAAF,mBAAclB,QAWlB,uBAGA,2B,iCC4BGoB,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPE1B,EAOH,EAPGA,SAAU2B,EAOb,EAPaA,aACV1B,EAMH,EANGA,WAAY2B,EAMf,EANeA,QACZhC,EAKH,EALGA,MACAnD,EAIH,EAJGA,UAAWoF,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMrF,IAAEkD,MAAR,YAAiBiC,GAAgC,IACnEG,EAAmB,UAAMtF,IAAEuF,MAAR,YAAiBrC,EAAQlD,IAAEwF,WAAa,GAAxC,YAA8CxF,IAAEyF,WAAhD,YAA8D1F,GAAwB,IAE/G,OACI,sBAAKA,UAAWC,IAAE0F,SAAlB,UACI,mCACIV,KAAM,OACN1B,SArBa,SAACqC,GACtBrC,GACGA,EAASqC,GAEZV,GAAgBA,EAAaU,EAAE3D,cAAcC,QAkBrCsB,WAhBe,SAACoC,GACxBpC,GAAcA,EAAWoC,GAEzBT,GACa,UAAVS,EAAEnC,KACF0B,KAYKnF,UAAWuF,GAEPF,IAEPlC,GAAS,sBAAMnD,UAAWsF,EAAjB,SAAsCnC,Q,kCC3B7C0C,EAhBqC,SAAC,GAK/C,IAHE3E,EAGH,EAHGA,IAAKlB,EAGR,EAHQA,UACFqF,EAEN,mCACKS,EAAc,UAAM5E,EAAMjB,IAAEiB,IAAM,GAApB,YAA0BjB,IAAE8F,QAA5B,YAAuC/F,GAE3D,OACI,oCACIA,UAAW8F,GACPT,K,iBCsBDW,EAhCyC,SAAC,GASpD,EAPGf,KAOF,IANE1B,EAMH,EANGA,SAAU0C,EAMb,EANaA,gBACVjG,EAKH,EALGA,UACAkG,GAIH,EALcd,cAKd,EAJGc,UAEGb,EAEN,4FAOKE,EAAmB,UAAMtF,IAAEkG,SAAR,YAAoBnG,GAAwB,IAErE,OACI,wBAAOA,UAAWC,IAAEmG,MAApB,UACI,mCACInB,KAAM,WACN1B,SAZa,SAACqC,GAEtBK,GAAmBA,EAAgBL,EAAE3D,cAAcoE,SACnD9C,GAAYA,EAASqC,IAUb5F,UAAWuF,GAEPF,IAEPa,GAAY,sBAAMlG,UAAWC,IAAEmF,cAAnB,SAAmCc,QCyC7CI,MAzEf,WAAgB,IAAD,EACa9D,mBAAiB,IAD9B,mBACJ+D,EADI,KACEC,EADF,KAELrD,EAAQoD,EAAO,GAAK,sBAEpBE,EAAY,WACVtD,EACAwB,MAAM,gFAENA,MAAM4B,IARH,EAYmB/D,oBAAkB,GAZrC,mBAYJ6D,EAZI,KAYKK,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAK1G,UAAWC,IAAE0G,OAAlB,UACI,cAAC,EAAD,CACIzE,MAAOqE,EACPrB,aAAcsB,EACdrB,QAASsB,EACTtD,MAAOA,IAIX,cAAC,EAAD,IAMA,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIjC,KAAG,EACHK,QAASkF,EAFb,qBAOA,cAAC,EAAD,CAAaG,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIP,QAASA,EACTJ,gBAAiBS,EAFrB,wBAQA,cAAC,EAAD,CAAeL,QAASA,EAAS9C,SA/CxB,SAACqC,GAAD,OAAsCc,EAAWd,EAAE3D,cAAcoE,eAkD9E,uBAKA,2BCvDGQ,MAbf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCFGC,MARf,WACI,OACI,0CCMOC,MARf,WACI,OACI,+CCGKC,EACG,cADHA,EAED,UAFCA,GAGI,eAyBFC,OAtBf,WACI,OACI,8BAEI,eAAC,IAAD,WAIA,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAIL,OAEpD,cAAC,IAAD,CAAOE,KAAMF,EAAiBI,OAAQ,kBAAM,cAAC,EAAD,OAC5C,cAAC,IAAD,CAAOF,KAAMF,EAAaI,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,KAAMF,GAAkBI,OAAQ,kBAAM,cAAC,EAAD,OAG7C,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,a,mBCXlBE,OAZf,WACI,OACI,sBAAKtH,UAAWC,KAAEsH,OAAlB,UACI,cAAC,IAAD,CAASF,GAAIL,EAAiBhH,UAAWC,KAAEuH,QAASC,gBAAiBxH,KAAEyH,OAAvE,wBACA,cAAC,IAAD,CAASL,GAAIL,EAAchH,UAAWC,KAAEuH,QAASC,gBAAiBxH,KAAEyH,OAApE,oBACA,cAAC,IAAD,CAASL,GAAIL,GAAmBhH,UAAWC,KAAEuH,QAASC,gBAAiBxH,KAAEyH,OAAzE,yBAEA,qBAAKtH,IAAK,0DAA2DJ,UAAWC,KAAE0H,YCQ/EC,OAff,WACI,OACI,8BAEI,eAAC,IAAD,WAEA,cAAC,GAAD,IAEA,cAAC,GAAD,UCCGC,OAVf,WACI,OACI,sBAAK7H,UAAWC,IAAE4H,IAAlB,UACI,mDACA,cAAC,GAAD,QCIQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASf,OACL,cAAC,IAAMgB,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA1F,GACH2F,QAAQ3F,MAAMA,EAAMxC,a,kBEhJpChB,EAAOC,QAAU,CAAC,IAAM,qBAAqB,IAAM,qBAAqB,OAAS,wBAAwB,IAAM,qBAAqB,OAAS,wBAAwB,MAAQ,uBAAuB,UAAY,6B,kBCAhND,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,IAAM,qBAAqB,WAAa,4BAA4B,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,wB,kBCAhRD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,0B","file":"static/js/main.fb08a731.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"input\":\"SuperInputText_input__1P_Mf\",\"divInput\":\"SuperInputText_divInput__10VI4\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__21ydZ\",\"errorMessage\":\"Greeting_errorMessage__zEoF5\",\"error\":\"Greeting_error__1uvQ8\",\"btn\":\"Greeting_btn__1zEPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\",\"label\":\"SuperCheckbox_label__kF06l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.messageComponent}>\n            <img className={s.img} src={props.avatar} alt=\"avatar\"/>\n            <div className={s.mesAll}>\n                <div className={s.tail}/>\n                <div className={s.messageBox}>\n                    <p className={s.name}>{props.name}</p>\n                    <p className={s.message}>{props.message}</p>\n                    <p className={s.time}>{props.time}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    const classPriority = () => {\n        switch (props.affair.priority) {\n            case 'high':\n                return s.red;\n            case 'middle':\n                return s.yellow;\n            case 'low':\n                return s.green;\n        }\n    }\n\n    return (\n        <div className={s.affair}>\n            <div>\n                {props.affair.name}\n            </div>\n            <div className={classPriority()}>\n                [{props.affair.priority}]\n            </div>\n            <button className={s.btn} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from \"./Affairs.module.css\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setFilter = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        props.setFilter(event.currentTarget.value as FilterType)\n    }\n\n    const setClasses = (filter: FilterType) => {\n        return s.btn + ( props.filter === filter ? ` ${s.activeBtn}` : '' )\n    }\n\n    return (\n        <div>\n            {mappedAffairs}\n\n            <button className={setClasses('all')} onClick={setFilter} value={'all'}>All</button>\n            <button className={setClasses('high')} onClick={setFilter} value={'high'}>High</button>\n            <button className={setClasses('middle')} onClick={setFilter} value={'middle'}>Middle</button>\n            <button className={setClasses('low')} onClick={setFilter} value={'low'}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport s from './Affairs.module.css'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(affair => affair.priority === filter);\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(af => af._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div className={s.hw2}>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                filter={filter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (event: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = ({name, setNameCallback, addUser, error, totalUsers} /*деструктуризация пропсов*/ ) => {\n\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') addUser();\n    }\n\n    const usersCounter = () => {\n        if (totalUsers === 0) return 'no users yet'\n        else if (totalUsers === 1) return `${totalUsers} user added`\n        else return `${totalUsers} users added`\n    }\n\n    return (\n        <div className={s.greeting}>\n            <input value={name} onChange={setNameCallback} className={inputClass} onKeyPress={enterPressed}/>\n            <button className={s.btn} onClick={addUser}>Add</button>\n            <span>{usersCounter()}</span>\n            <span className={s.errorMessage}>{error}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (event: React.ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const newName = event.currentTarget.value;\n        if (!!Number(newName) || !newName.trim()) {\n            setError(' Invalid name! ');\n            setName(newName);\n        } else {\n            setName(newName);\n            setError('')\n        }\n    }\n\n    const changeName = (name: string) => {\n        return name.split(' ').filter(el => el.trim()).map(el => el[0].toUpperCase() + el.substring(1)).join(' ')\n    }\n\n    const addUser = () => {\n        if (error || name === '') {\n            setError(' Invalid name! ')\n            setName('');\n        } else {\n            const addedName = changeName(name);\n            addUserCallback(addedName);\n            setName('');\n            alert(`Hello  ${addedName}!`) // need to fix\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser = { _id: v1(), name: name }\n        setUsers([newUser, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : ''} ${s.superInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\n\n    return (\n        <div className={s.divInput}>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : ''} ${s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'Could not be empty!'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    //spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    //className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Junior() {\n    return (\n        <div>\n           JUNIOR\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            JUNIOR PLUS\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport Error404 from \"./pages/Error404\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR\n            exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n           {/* у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.navbar}>\n            <NavLink to={PATH.PRE_JUNIOR} className={s.navlink} activeClassName={s.active}>pre-junior</NavLink>\n            <NavLink to={PATH.JUNIOR}  className={s.navlink} activeClassName={s.active}>junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS}  className={s.navlink} activeClassName={s.active}>junior-plus</NavLink>\n\n            <img src={'https://thypix.com/wp-content/uploads/blue-arrow-71.png'} className={s.arrow}/>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Affairs_btn__2fsK5\",\"hw2\":\"Affairs_hw2__1gonf\",\"affair\":\"Affairs_affair__179X1\",\"red\":\"Affairs_red__2Rwj5\",\"yellow\":\"Affairs_yellow__7Ir_n\",\"green\":\"Affairs_green__2qh3J\",\"activeBtn\":\"Affairs_activeBtn__23e1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"Message_messageComponent__2ZeUJ\",\"img\":\"Message_img__2hw3a\",\"messageBox\":\"Message_messageBox__KdDBl\",\"message\":\"Message_message__8WR15\",\"time\":\"Message_time__HOFTG\",\"name\":\"Message_name__Tzmp0\",\"mesAll\":\"Message_mesAll__2OW7g\",\"tail\":\"Message_tail__sQC4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlink\":\"Header_navlink__21Eao\",\"active\":\"Header_active__1dmn0\",\"arrow\":\"Header_arrow__2M442\",\"navbar\":\"Header_navbar__2UxIr\"};"],"sourceRoot":""}