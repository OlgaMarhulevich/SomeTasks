{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Affair","props","className","s","affair","name","priority","red","yellow","green","classPriority","btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","event","currentTarget","value","setClasses","filter","activeBtn","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","hw2","af","deleteAffair","Message","messageComponent","img","src","avatar","alt","mesAll","tail","messageBox","message","time","messageData","HW1","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","divInput","e","key","SuperButton","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","text","setText","showAlert","alert","setChecked","column","disabled","Greeting","setNameCallback","addUser","totalUsers","inputClass","greeting","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","length","newName","Number","trim","addedName","split","el","toUpperCase","substring","join","changeName","HW3","setUsers","newUser","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7e252197.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Affairs_btn__2fsK5\",\"hw2\":\"Affairs_hw2__1gonf\",\"affair\":\"Affairs_affair__179X1\",\"red\":\"Affairs_red__2Rwj5\",\"yellow\":\"Affairs_yellow__7Ir_n\",\"green\":\"Affairs_green__2qh3J\",\"activeBtn\":\"Affairs_activeBtn__23e1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageComponent\":\"Message_messageComponent__2ZeUJ\",\"img\":\"Message_img__2hw3a\",\"messageBox\":\"Message_messageBox__KdDBl\",\"message\":\"Message_message__8WR15\",\"time\":\"Message_time__HOFTG\",\"name\":\"Message_name__Tzmp0\",\"mesAll\":\"Message_mesAll__2OW7g\",\"tail\":\"Message_tail__sQC4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"input\":\"SuperInputText_input__1P_Mf\",\"divInput\":\"SuperInputText_divInput__10VI4\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__21ydZ\",\"errorMessage\":\"Greeting_errorMessage__zEoF5\",\"error\":\"Greeting_error__1uvQ8\",\"btn\":\"Greeting_btn__1zEPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\",\"label\":\"SuperCheckbox_label__kF06l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    const classPriority = () => {\n        switch (props.affair.priority) {\n            case 'high':\n                return s.red;\n            case 'middle':\n                return s.yellow;\n            case 'low':\n                return s.green;\n        }\n    }\n\n    return (\n        <div className={s.affair}>\n            <div>\n                {props.affair.name}\n            </div>\n            <div className={classPriority()}>\n                [{props.affair.priority}]\n            </div>\n            <button className={s.btn} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from \"./Affairs.module.css\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setFilter = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        props.setFilter(event.currentTarget.value as FilterType)\n    }\n\n    const setClasses = (filter: FilterType) => {\n        return s.btn + ( props.filter === filter ? ` ${s.activeBtn}` : '' )\n    }\n\n    return (\n        <div>\n            {mappedAffairs}\n\n            <button className={setClasses('all')} onClick={setFilter} value={'all'}>All</button>\n            <button className={setClasses('high')} onClick={setFilter} value={'high'}>High</button>\n            <button className={setClasses('middle')} onClick={setFilter} value={'middle'}>Middle</button>\n            <button className={setClasses('low')} onClick={setFilter} value={'low'}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport s from './Affairs.module.css'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(affair => affair.priority === filter);\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(af => af._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div className={s.hw2}>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                filter={filter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.messageComponent}>\n            <img className={s.img} src={props.avatar} alt=\"avatar\"/>\n            <div className={s.mesAll}>\n                <div className={s.tail}/>\n                <div className={s.messageBox}>\n                    <p className={s.name}>{props.name}</p>\n                    <p className={s.message}>{props.message}</p>\n                    <p className={s.time}>{props.time}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : ''} ${s.superInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\n\n    return (\n        <div className={s.divInput}>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : ''} ${s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'Could not be empty!'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    //spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    //className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (event: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = ({name, setNameCallback, addUser, error, totalUsers} /*деструктуризация пропсов*/ ) => {\n\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n\n    const enterPressed = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') addUser();\n    }\n\n    const usersCounter = () => {\n        if (totalUsers === 0) return 'no users yet'\n        else if (totalUsers === 1) return `${totalUsers} user added`\n        else return `${totalUsers} users added`\n    }\n\n    return (\n        <div className={s.greeting}>\n            <input value={name} onChange={setNameCallback} className={inputClass} onKeyPress={enterPressed}/>\n            <button className={s.btn} onClick={addUser}>Add</button>\n            <span>{usersCounter()}</span>\n            <span className={s.errorMessage}>{error}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (event: React.ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const newName = event.currentTarget.value;\n        if (!!Number(newName) || !newName.trim()) {\n            setError(' Invalid name! ');\n            setName(newName);\n        } else {\n            setName(newName);\n            setError('')\n        }\n    }\n\n    const changeName = (name: string) => {\n        return name.split(' ').filter(el => el.trim()).map(el => el[0].toUpperCase() + el.substring(1)).join(' ')\n    }\n\n    const addUser = () => {\n        if (error || name === '') {\n            setError(' Invalid name! ')\n            setName('');\n        } else {\n            const addedName = changeName(name);\n            addUserCallback(addedName);\n            setName('');\n            alert(`Hello  ${addedName}!`) // need to fix\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser = { _id: v1(), name: name }\n        setUsers([newUser, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}